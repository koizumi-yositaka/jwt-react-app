/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as SecretIndexImport } from './routes/secret/index'
import { Route as CommonSignupImport } from './routes/_common/signup'
import { Route as CommonLoginImport } from './routes/_common/login'
import { Route as CommonDescriptionImport } from './routes/_common/description'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SecretIndexRoute = SecretIndexImport.update({
  path: '/secret/',
  getParentRoute: () => rootRoute,
} as any)

const CommonSignupRoute = CommonSignupImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const CommonLoginRoute = CommonLoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const CommonDescriptionRoute = CommonDescriptionImport.update({
  path: '/description',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_common/description': {
      id: '/_common/description'
      path: '/description'
      fullPath: '/description'
      preLoaderRoute: typeof CommonDescriptionImport
      parentRoute: typeof rootRoute
    }
    '/_common/login': {
      id: '/_common/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof CommonLoginImport
      parentRoute: typeof rootRoute
    }
    '/_common/signup': {
      id: '/_common/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof CommonSignupImport
      parentRoute: typeof rootRoute
    }
    '/secret/': {
      id: '/secret/'
      path: '/secret'
      fullPath: '/secret'
      preLoaderRoute: typeof SecretIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/description': typeof CommonDescriptionRoute
  '/login': typeof CommonLoginRoute
  '/signup': typeof CommonSignupRoute
  '/secret': typeof SecretIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/description': typeof CommonDescriptionRoute
  '/login': typeof CommonLoginRoute
  '/signup': typeof CommonSignupRoute
  '/secret': typeof SecretIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_common/description': typeof CommonDescriptionRoute
  '/_common/login': typeof CommonLoginRoute
  '/_common/signup': typeof CommonSignupRoute
  '/secret/': typeof SecretIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/description' | '/login' | '/signup' | '/secret'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/description' | '/login' | '/signup' | '/secret'
  id:
    | '__root__'
    | '/'
    | '/_common/description'
    | '/_common/login'
    | '/_common/signup'
    | '/secret/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CommonDescriptionRoute: typeof CommonDescriptionRoute
  CommonLoginRoute: typeof CommonLoginRoute
  CommonSignupRoute: typeof CommonSignupRoute
  SecretIndexRoute: typeof SecretIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CommonDescriptionRoute: CommonDescriptionRoute,
  CommonLoginRoute: CommonLoginRoute,
  CommonSignupRoute: CommonSignupRoute,
  SecretIndexRoute: SecretIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_common/description",
        "/_common/login",
        "/_common/signup",
        "/secret/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_common/description": {
      "filePath": "_common/description.tsx"
    },
    "/_common/login": {
      "filePath": "_common/login.tsx"
    },
    "/_common/signup": {
      "filePath": "_common/signup.tsx"
    },
    "/secret/": {
      "filePath": "secret/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
